/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockUniswapV3Quoter,
  MockUniswapV3QuoterInterface,
} from "../MockUniswapV3Quoter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "",
        type: "uint160",
      },
    ],
    name: "quoteExactInputSingle",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610157806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f7729d4314610030575b600080fd5b61004361003e36600461006c565b610055565b60405190815260200160405180910390f35b600061006283600a6100dc565b9695505050505050565b600080600080600060a0868803121561008457600080fd5b853561008f81610109565b9450602086013561009f81610109565b9350604086013562ffffff811681146100b757600080fd5b92506060860135915060808601356100ce81610109565b809150509295509295909350565b600081600019048311821515161561010457634e487b7160e01b600052601160045260246000fd5b500290565b6001600160a01b038116811461011e57600080fd5b5056fea2646970667358221220ba4636d65751a94e3f3f13ea7a32de70c5a79429a30431759e78c6810e73a18d64736f6c63430008060033";

export class MockUniswapV3Quoter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockUniswapV3Quoter> {
    return super.deploy(overrides || {}) as Promise<MockUniswapV3Quoter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockUniswapV3Quoter {
    return super.attach(address) as MockUniswapV3Quoter;
  }
  connect(signer: Signer): MockUniswapV3Quoter__factory {
    return super.connect(signer) as MockUniswapV3Quoter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockUniswapV3QuoterInterface {
    return new utils.Interface(_abi) as MockUniswapV3QuoterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockUniswapV3Quoter {
    return new Contract(address, _abi, signerOrProvider) as MockUniswapV3Quoter;
  }
}
